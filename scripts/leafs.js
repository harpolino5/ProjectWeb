// –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–º–µ–Ω—ñ –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∑ URL
let page = location.pathname.split("/").pop();

let simbol = "üçÉ";

// –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Å–∏–º–≤–æ–ª—É –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó –ª–∏—Å—Ç—è –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
if (page == "index.html") {
    simbol = "üçÉ";
} else if (page == "field.html") {
    simbol = "üåæ";
} else if (page == "village.html") {
    simbol = "ü™∂";
} else if (page == "forest.html") {
    simbol = "üçÉ";
} else if (page == "water.html") {
    simbol = "üíß";
}

// –ü–æ—á–∞—Ç–∫–æ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —Ç–∞ —ñ–Ω—à—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
let x1 = 0;
let y1 = 0;
const vh = Math.max(
    document.documentElement.clientHeight || 0,
    window,
    innerHeight || 0
);
let dist_to_draw = 50;
let delay = 1000;
let fsize = ["1.1rem", "1.4rem", "0.8rem", "1.7rem"];

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ —á–∏—Å–ª–∞ –≤ –∑–∞–¥–∞–Ω–æ–º—É –¥—ñ–∞–ø–∞–∑–æ–Ω—ñ
let rand = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–±–æ—Ä—É –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –∑ –º–∞—Å–∏–≤—É
let selRand = (o) => o[rand(0, o.length - 1)];

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –≤—ñ–¥—Å—Ç–∞–Ω—ñ –º—ñ–∂ –¥–≤–æ–º–∞ —Ç–æ—á–∫–∞–º–∏
let distanceTo = (x1, y1, x2, y2) =>
    Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –º–∞—î –≤—ñ–¥–±—É–≤–∞—Ç–∏—Å—è –∞–Ω—ñ–º–∞—Ü—ñ—è –¥–ª—è –¥–∞–Ω–æ—ó –ø–æ–∑–∏—Ü—ñ—ó –º–∏—à—ñ
let shouldDraw = (x, y) => distanceTo(x1, y1, x, y) >= dist_to_draw;

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ª–∏—Å—Ç–æ—á–∫–∞ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
let addLeaf = (x, y) => {
    const leaf = document.createElement("div");
    leaf.innerHTML = simbol;
    leaf.className = "leaf";
    leaf.style.top = `${y + rand(-20, 20)}px`;
    leaf.style.left = `${x}px`;
    leaf.style.fontSize = selRand(fsize);
    leaf.style.transformStyle = "preserve-3d";
    leaf.style.width = "1px";
    leaf.style.height = "1px";
    leaf.style.position = "fixed";
    document.body.appendChild(leaf);

    // –ê–Ω—ñ–º–∞—Ü—ñ—è –¥–ª—è —Ä—É—Ö—É —Ç–∞ –∑–Ω–∏–∫–Ω–µ–Ω–Ω—è –ª–∏—Å—Ç–æ—á–∫–∞
    const fs = 10 + 5 * parseFloat(getComputedStyle(leaf).fontSize);
    leaf.animate(
        {
            translate: `0 ${y + fs > vh ? vh - y : fs}px`,
            opacity: 0,
            transform: `rotateX(${rand(1, 500)}deg) rotateY(${rand(
                1,
                500
            )}deg)`,
        },
        {
            duration: delay,
            fill: "forwards",
        }
    );

    // –ü—ñ—Å–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ª–∏—Å—Ç–æ—á–∫–∞ –∑—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    setTimeout(() => {
        leaf.remove();
    }, delay);
};

// –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó —Ä—É—Ö—É –º–∏—à—ñ
document.addEventListener("mousemove", (e) => {
    const { clientX, clientY } = e;
    if (shouldDraw(clientX, clientY)) {
        // –î–æ–¥–∞–≤–∞–Ω–Ω—è –ª–∏—Å—Ç–æ—á–∫–∞ —Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
        addLeaf(clientX, clientY);
        x1 = clientX;
        y1 = clientY;
    }
});
